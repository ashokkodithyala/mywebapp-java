# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest    
    steps:
    - name: checkout Git repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 21 for Build
      uses: actions/setup-java@v4
      with:        
        distribution: 'zulu' # See 'Supported distributions' for available options
        java-version: '21'        
        cache: 'maven'
        
    - name: Build with Maven
      run: mvn clean install -DskipTests
      #run: mvn -B package --file pom.xml

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4      
      with:
        name: MyWebApp-0.0.1-SNAPSHOT
        path: |                           
         ${{ github.workspace }}/target         
          retention-days: 10          
        

  sonar:
    name: Code-Quality Check
    runs-on: ubuntu-latest    
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21 for Sonar
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '21'        
      - name: Sonar Code Analysis
        run: mvn -B clean verify -Psonar -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Sonar Report artifcat upload
        uses: actions/upload-artifact@v4      
        with:
          name: Sonary Report
          path: |                                       
             ${{ github.workspace }}/reports
             retention-days: 10          
   


  docker:
    name: Containerization
    runs-on: ubuntu-latest
    needs: [build,sonar]
    steps:
    - name: Download artifact for docker build
      uses: actions/download-artifact@v4      
      with:
        name: MyWebApp-0.0.1-SNAPSHOT
        path: target/jar
    - name: Display structure of downloaded files
      run: ls -ls target/jar/target


    #- name: Set up Docker Buildx
    #  uses: docker/setup-buildx-action@v3  
    
    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      id: docker_build      
      uses: docker/build-push-action@v5
      with:
        #context: .
        #file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/myweb-app-java:${{ github.run_id }}
        